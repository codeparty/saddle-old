// Generated by CoffeeScript 1.4.0
var Item, util;

util = require('./util');

Item = (function() {
  var doc;

  doc = document;

  function Item(el) {
    this.el = el;
    this.svgRoot = util.svgRoot(el);
  }

  Item.prototype._createFrag = function(html) {
    return util.createFragment(this.svgRoot || this.el, html);
  };

  Item.prototype.getAttr = function(name) {
    return this.el.getAttribute(name);
  };

  Item.prototype.setAttr = function(name, val) {
    this.el.setAttribute(name, val);
  };

  Item.prototype.getProp = function(name) {
    return this.el[name];
  };

  Item.prototype.setProp = function(name, val) {
    this.el[name] = val;
  };

  Item.prototype.getHtml = function() {
    return this.el.innerHTML;
  };

  Item.prototype.setHtml = function(html) {
    var child, children, el;
    el = this.el;
    if (this.svgRoot) {
      el = this.el;
      children = el.childNodes;
      while (child = el.firstChild) {
        el.removeChild(child);
      }
      this.append(html);
    } else {
      el.innerHTML = html;
      util.fixWhitespace(el, html);
    }
  };

  Item.prototype.append = function(html) {
    this.insert(html);
  };

  Item.prototype.insert = function(html, index) {
    var before, el;
    el = this.el;
    before = ((index != null) && el.childNodes[index]) || null;
    el.insertBefore(this._createFrag(html), before);
  };

  Item.prototype.remove = function(index) {
    util.remove(this.el, index);
  };

  Item.prototype.move = function(from, to, howMany) {
    if (howMany == null) {
      howMany = 1;
    }
    util.move(this.el, from, to >= from ? to + howMany : to, howMany);
  };

  return Item;

})();

require('./Item-attr-shim')(Item);

module.exports = Item;
