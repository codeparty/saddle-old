// Generated by CoffeeScript 1.4.0
var Item, util;

util = require('./util');

Item = (function() {
  var doc;

  doc = document;

  function Item(el) {
    var svg;
    this.el = el;
    this.svg = svg = !!el.ownerSVGElement || el.tagName === "svg";
    this.svgRoot = svg ? el.ownerSVGElement || el : null;
  }

  Item.prototype.getAttr = function(name) {
    return this.el.getAttribute(name);
  };

  Item.prototype.setAttr = function(name, val) {
    this.el.setAttribute(name, val);
  };

  Item.prototype.getProp = function(name) {
    return this.el[name];
  };

  Item.prototype.setProp = function(name, val) {
    this.el[name] = val;
  };

  Item.prototype.getHtml = function() {
    return this.el.innerHTML;
  };

  Item.prototype.setHtml = function(html) {
    var children, el, i;
    el = this.el;
    if (this.svg) {
      el = this.el;
      children = el.childNodes;
      i = children.length;
      while (i--) {
        el.removeChild(children[i]);
      }
      el.appendChild(util.createFragment(el, html));
    } else {
      el.innerHTML = html;
    }
  };

  Item.prototype.append = function(html) {
    this.el.insertAdjacentHTML('beforeend', html);
  };

  Item.prototype.insert = function(html, index) {
    var childNodes;
    if ((childNodes = this.el.childNodes).length <= index) {
      this.append(html);
    } else {
      childNodes[index].insertAdjacentHTML('beforebegin', html);
    }
  };

  Item.prototype.remove = function(index) {
    util.rmChild(this.el, index);
  };

  Item.prototype.move = function(from, to, howMany) {
    if (howMany == null) {
      howMany = 1;
    }
    util.move(this.el, from, to >= from ? to + howMany : to, howMany);
  };

  return Item;

})();

module.exports = Item;
