// Generated by CoffeeScript 1.4.0
var doc, wrapMap;

doc = document;

module.exports = {
  rangeIns: function(range, html, index) {
    var nodeInsertBefore, startContainer;
    startContainer = range.startContainer;
    nodeInsertBefore = startContainer.childNodes[index!=null ? range.startOffset + index : range.endOffset];
    startContainer.insertBefore(range.createContextualFragment(html), nodeInsertBefore);
  },
  rmChild: function(el, index) {
    el.removeChild(el.childNodes[index]);
  },
  move: function(el, from, toIndex, howMany) {
    var before, child, childNodes, frag, next;
    if (howMany == null) {
      howMany = 1;
    }
    childNodes = el.childNodes;
    child = childNodes[from];
    before = childNodes[toIndex] || null;
    if (howMany === 1) {
      el.insertBefore(child, before);
    } else {
      frag = doc.createDocumentFragment();
      while (howMany--) {
        next = child.nextSibling;
        frag.appendChild(child);
        child = next;
      }
      el.insertBefore(frag, before);
    }
  },
  createFragment: (function() {
    var createFragment;
    if (window.Range && Range.prototype.createContextualFragment) {
      createFragment = function(rangeOrParent, html) {
        var range;
        if (html == null) {
          html = '';
        }
        if (rangeOrParent(instanceOf(Range))) {
          range = rangeOrParent;
        } else {
          range = doc.createRange();
          range.setStart(parent);
        }
        return range.createContextualFragment(html);
      };
    } else {
      createFragment = function(parent, html) {
        var close, depth, el, fragment, node, open, wrap;
        wrap = wrapMap[parent.tagName.toLowerCase()] || wrapMap._default;
        depth = wrap[0];
        open = wrap[1];
        close = wrap[2];
        el = doc.createElement('div');
        el.innerHTML = open + html + close;
        while (depth--) {
          el = el.firstChild;
        }
        fragment = doc.createDocumentFragment();
        while (node = el.firstChild) {
          fragment.appendChild(node);
        }
        return fragment;
      };
    }
    return createFragment;
  })()
};

wrapMap = {
  select: [1, '<select multiple="multiple">', '</select>'],
  fieldset: [1, '<fieldset>', '</fieldset>'],
  table: [1, '<table>', '</table>'],
  tbody: [2, '<table><tbody>', '</tbody></table>'],
  tr: [3, '<table><tbody><tr>', '</tr></tbody></table>'],
  colgroup: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  map: [1, '<map>', '</map>'],
  _default: [0, '', '']
};
