// Generated by CoffeeScript 1.4.0
var RangeShim, wrapMap;

RangeShim = (function() {

  function RangeShim() {
    this._start = this._end = this.startContainer = this.endContainer = this.startOffset = this.endOffset = null;
  }

  RangeShim.prototype._getOffset = function(offset, node) {
    while (node = node.previousSibling) {
      offset++;
    }
    return offset;
  };

  RangeShim.prototype.setStartAfter = function(_start) {
    this._start = _start;
    this.startContainer = _start.parentNode;
    this.startOffset = this._getOffset(1, _start);
  };

  RangeShim.prototype.setEndBefore = function(_end) {
    this._end = _end;
    this.endContainer = _end.parentNode;
    this.endOffset = this._getOffset(0, _end);
  };

  RangeShim.prototype.deleteContents = function() {
    var child, parent;
    parent = this.startContainer;
    while ((child = this._start.nextSibling) && child !== this._end) {
      parent.removeChild(child);
    }
  };

  RangeShim.prototype.insertNode = function(node) {
    return this.startContainer.insertBefore(node, this._end);
  };

  RangeShim.prototype.createContextualFragment = function(html) {
    var close, depth, el, fragment, node, open, parent, wrap;
    parent = this.startContainer;
    wrap = wrapMap[parent.tagName.toLowerCase()] || wrapMap._default;
    depth = wrap[0];
    open = wrap[1];
    close = wrap[2];
    el = document.createElement('div');
    el.innerHTML = open + html + close;
    while (depth--) {
      el = el.firstChild;
    }
    fragment = document.createDocumentFragment();
    while (node = el.firstChild) {
      fragment.appendChild(node);
    }
    return fragment;
  };

  return RangeShim;

})();

wrapMap = {
  select: [1, '<select multiple="multiple">', '</select>'],
  fieldset: [1, '<fieldset>', '</fieldset>'],
  table: [1, '<table>', '</table>'],
  tbody: [2, '<table><tbody>', '</tbody></table>'],
  tr: [3, '<table><tbody><tr>', '</tr></tbody></table>'],
  colgroup: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  map: [1, '<map>', '</map>'],
  _default: [0, '', '']
};

if (window.Range) {
  if (!Range.prototype.createContextualFragment) {
    Range.prototype.createContextualFragment = RangeShim.prototype.createContextualFragment;
  }
  module.exports = function() {
    return document.createRange();
  };
} else {
  module.exports = RangeShim;
}
