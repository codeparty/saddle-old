// Generated by CoffeeScript 1.4.0
var ItemRange, util;

util = require('./util');

ItemRange = (function() {
  var doc;

  doc = document;

  function ItemRange(start, end) {
    this.start = start;
    this.end = end;
    this.el = start;
    this.range = util.createRange();
    this._ranged = false;
    this._updateRange();
  }

  ItemRange.prototype._createFrag = function(html) {
    return util.createFragment(this.el.ownerSVGElement || this.range, html);
  };

  ItemRange.prototype._updateRange = function() {
    var range;
    range = this.range;
    range.setStartAfter(this.start);
    range.setEndBefore(this.end);
  };

  ItemRange.prototype.setHtml = function(html) {
    var fragment, range;
    this._updateRange();
    range = this.range;
    range.deleteContents();
    fragment = range.insertNode(this._createFrag(html));
  };

  ItemRange.prototype.append = function(html) {
    this.insert(html);
  };

  ItemRange.prototype.insert = function(html, index) {
    var containerIndex, nodeInsertBefore, range, startContainer;
    this._updateRange();
    range = this.range;
    containerIndex = range.endOffset - range.startOffset > index ? range.startOffset + index : range.endOffset;
    startContainer = range.startContainer;
    nodeInsertBefore = startContainer.childNodes[containerIndex];
    startContainer.insertBefore(this._createFrag(html), nodeInsertBefore);
  };

  ItemRange.prototype.remove = function(index) {
    var range;
    this._updateRange();
    range = this.range;
    util.rmChild(range.startContainer, range.startOffset + index);
  };

  ItemRange.prototype.move = function(from, to, howMany) {
    var endOffset, indexTo, offset, range;
    if (howMany == null) {
      howMany = 1;
    }
    this._updateRange();
    range = this.range;
    offset = range.startOffset;
    endOffset = range.endOffset;
    indexTo = offset + (to >= from ? to + howMany : to);
    if (indexTo > endOffset) {
      indexTo = endOffset;
    }
    util.move(range.startContainer, offset + from, indexTo, howMany);
  };

  return ItemRange;

})();

module.exports = ItemRange;
